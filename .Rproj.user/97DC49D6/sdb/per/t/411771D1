{
    "collab_server" : "",
    "contents" : "---\ntitle: \"Analise de cluster para identificar padrões de pastagens\"\nauthor: \"Oliveira-Santos, Claudinei\"\ndate: \"22 de setembro de 2017\"\noutput: \n  html_document: \n    fig_caption: yes\n    fig_height: 12\n    fig_width: 12\n---\n\n```{r setup, include=FALSE}\nknitr::opts_chunk$set(echo = TRUE, cache = TRUE)\n```\n\n\n\n```{r packages and functions, message=FALSE, warning=FALSE, echo=FALSE}\n# library(ggmap) #Non exist\nlibrary(ggplot2)\nlibrary(gpclib)\nrequire(graphics)\nlibrary(mapdata)\nlibrary(maps)\nlibrary(maptools)\nlibrary(plyr)\nlibrary(raster)\nlibrary(rgdal)\nlibrary(scales)\n# if (!require(gpclib)) install.packages(\"gpclib\", type=\"source\")\ngpclibPermit()\nsource('Multiplot.r')\n```\n\n\n\nApresentação dos pontos de campo no google docs <https://docs.google.com/presentation/d/1360Tdw5L99RntRsdW-gkXAR4MM_W_4auh4-Tz1o9GRw/edit?usp=sharing> \n```{r tableaCSV, echo=FALSE, cache=TRUE}\nndviPontos <- read.csv(\"PontosPastagem_todos/NDVI_PontosPastagem_maxminfilter.csv\", sep = \",\", dec = \".\")\n```\n\n\n\n```{r shpFiles, echo=FALSE, cache=TRUE}\nogrUf <- readOGR(\"limite_estados/pa_br_estados_250_2013_ibge_wgs84.shp\", layer = \"pa_br_estados_250_2013_ibge_wgs84\")\nogrCamp <- readOGR(\"PontosPastagem_todos/PONTOS_PASTAGEM_ok.shp\", layer = \"PONTOS_PASTAGEM_ok\")\nogrMatop <- readOGR(\"Campo_MATOPIBA/Campo_MATOPIBA_ago2017.shp\", layer = \"Campo_MATOPIBA_ago2017\")\n```\n\n\n\n```{r editShp, echo=FALSE, cache=TRUE}\n#Editando Spatial data to plot\n\n#UF fortify\nogrUf@data$id <- ogrUf$NM_UF\nfortfyUf = fortify(ogrUf, region = \"id\")\nfortfyUf = join(fortfyUf, ogrUf@data, by=\"id\")\n\n#Field fortify\nogrCamp$long <-  ogrCamp@coords[,1]\nogrCamp$lat <-  ogrCamp@coords[,2]\nogrCamp <- as.data.frame(ogrCamp)\n\n#Field Matopiba\nogrMatop$long <-  ogrMatop@coords[,1]\nogrMatop$lat <-  ogrMatop@coords[,2]\nogrMatop <- as.data.frame(ogrMatop)\nogrMatopSub <- ogrMatop[ogrMatop$Cobertura %in% grep(\"Past\", unique(ogrMatop$Cobertura), value = TRUE) & as.character(ogrMatop$Paradas) %in% \"Sim\", ]\n```\n\n\n\n```{r editTableaCSV, echo=FALSE, cache=TRUE}\n#Editando ndvi para K-Means\n\n#Pontos com informações\nndviPontosInf <- ndviPontos[is.na(ndviPontos$INFO_ADD) == FALSE,]\n\n#Último ano de dados\nndviPontosLastYear <- ndviPontosInf[, 364:387]\n\n#ID para pegar ndvi dos grupos\nrownames(ndviPontosLastYear) <- ndviPontosInf$OBJECTID\n\n#Matriz de distância\ndistPontosLastYear <- dist(ndviPontosLastYear)\n\n#Total de pontos de campo e origem\nprint(\"Total de pontos de campo e origem\")\ndim(ndviPontos)\nas.character(unique(ndviPontos$ORIGEM))\n\n#Total de pontos de campo com informações\nprint(\"Total e origem dos pontos de campo com informações adicionais\")\ndim(ndviPontosInf)\nas.character(unique(ndviPontosInf$ORIGEM))\n```\n\n\n\n## Localização dos pontos de pastagem ao longo do Brasil\n```{r Fig1 ShpPontos, echo=FALSE, cache=TRUE, fig.height=9, fig.width=9, fig.align=\"center\"}\n#Pontos de pastagem\nggplot(data = fortfyUf) +\n  # geom_polygon(aes(x = long, y = lat, fill = NM_UF, group = group), colour = \"gray\") + \n  geom_polygon(aes(x = long, y = lat, group = group), fill = \"gray\", colour = \"black\") + \n  geom_point(data = ogrCamp, aes(x = long, y = lat), colour = \"blue\", lwd = 0.2) + \n  geom_point(data = ogrMatopSub, aes(x = long, y = lat), colour = \"red\", lwd = 0.2) + \n  labs(title = \"Pastagem: Pontos de campo\", x = \"longitude\", y = 'latitude') +\n  guides(colour=TRUE, fill = TRUE) + #remove legenda\n  coord_equal() + \n  theme_dark()\n```\n\n\n\n## Curva média e desvio padrão do NDVI para o último anos\n```{r meanCols, echo=FALSE, cache=TRUE}\n#Curva média do NDVI para o último ano\nmeanPontosLastYear <- colMeans(ndviPontosLastYear)\nsdPontosLastYear <- apply(ndviPontosLastYear, 2, FUN = sd)\n```\n\n\n\n```{r Fig2 meanCols, echo=FALSE, cache=TRUE, fig.height=6, fig.width=6, fig.align=\"center\"}\n#Plot curva média e sd NDVI do último ano\nplot(meanPontosLastYear, t = \"l\", col = \"black\", lwd = 2, ylim = c(0,1))\napply(ndviPontosLastYear, 1, FUN = lines, col = \"gray\")\nlines(meanPontosLastYear + sdPontosLastYear, col = \"red\")\nlines(meanPontosLastYear - sdPontosLastYear, col = \"red\")\nlines(meanPontosLastYear, col = \"black\", lwd = 2)\n```\n\n\n\n## Grupos de pastagens (Kmeans)\n```{r ndviKMeans, echo=FALSE, cache=TRUE}\n#Kmeans analise\nclKm <- kmeans(ndviPontosLastYear, 6)\ntable(clKm$cluster)\nclKmClust <- clKm$cluster\n\n#Identificar dos Pixels em cada grupo\nidGroups <- list()\nfor(i in 1:length(clKm$size)){\n  idGroups[[i]] <- as.numeric(\n    names(clKmClust[clKmClust == i]))\n}\n\n# NDVI em cada grupo (último ano)\nndviGroups <- lapply(idGroups, function(x) { ndviPontos[ndviPontos$OBJECTID %in% x, 364:387] })\n\n#Mean, sd, upper e lower for ndvi by group\nmeanNdviGroups <- lapply(ndviGroups,\n                         function(x) {cbind(MEAN = colMeans(x),\n                                            SD = apply(x, 2, FUN = sd),\n                                            UPPER = colMeans(x) + apply(x, 2, FUN = sd),\n                                            LOWER = colMeans(x) - apply(x, 2, FUN = sd))})\nmeanEndviGroups <- list()\nfor (i in 1:length(ndviGroups)){\nmeanEndviGroups[[i]] <- cbind(meanNdviGroups[[i]], t(ndviGroups[[i]]))\n}\n```\n\n\n\n## Centroid dos grupos de cluster Kmeans\n```{r fig KmeansCenter, include=FALSE, echo=FALSE, cache=TRUE, fig.height=6, fig.width=6, fig.align=\"center\", message=FALSE, warning=FALSE}\n#Kmeans Centroid\nplot(clKm$centers, col = 1:length(clKm$size), pch = 8, t = \"p\")\n# plot(clKm$centers[1,], col = 1:8, pch = 8, t = \"l\", ylim = c(0,1))\n# apply(clKm$centers, 1, lines, pch = 8, t = \"l\")\nlegend(\"bottomright\", fill = 1:length(clKm$size), legend = c(\"Center 1\", \"Center 2\", \"Center 3\", \"Center 4\", \"Center 5\", \"Center 6\"))\n```\n\n\n\n## Localização dos pontos de pastagem em cada grupo definido pelo Kmeans\n```{r local pontosKmeas, echo=FALSE, cache=TRUE, fig.height=12, fig.width=8, fig.align=\"center\"}\n#Locations of pasture points\nshpGroups <- lapply(idGroups, function(x) { ogrCamp[ogrCamp$OBJECTID %in% x, ] })\n```\n\n\n\n## Localização dos grupos de cluster Kmeans\n```{r Fig1 kmeansGruposSHP, echo=FALSE, cache=TRUE, fig.height=10, fig.width=15, fig.align=\"center\"}\n#Plot location of pasture points\ngPlot <- lapply(shpGroups, function (ptCamp) { \n  ggplot(data = fortfyUf) +\n  geom_polygon(aes(x = long, y = lat, group = group), fill = \"gray\", colour = \"black\") + \n  geom_point(data = ptCamp, aes(x = long, y = lat), colour = \"red\", lwd = 0.2) + \n  guides(colour=TRUE, fill = TRUE) + #remove legenda\n  coord_equal() + \n  theme_dark()\n})\n\n#Multiplot graph\nmultiplot(gPlot[[1]], gPlot[[2]], gPlot[[3]], gPlot[[4]], gPlot[[5]], gPlot[[6]], cols = 3)\n```\n\n\n\n## Padrão dos grupos de cluster Kmeans\n```{r Fig1 kmeansGruposNVDI, echo=FALSE, cache=TRUE, cache.rebuild=FALSE, fig.height=15, fig.width=10, fig.align=\"center\", warning=FALSE, message=FALSE}\npar(mfrow = c(3,2))\n# Grupo 1\nlapply(meanEndviGroups, function(x){ \n  plot(as.numeric(x[,\"MEAN\"]), t = \"l\", col = \"black\", lwd = 2, ylim = c(0,1), ylab = \"NDVI\", xlab = \"TIME\")\n    apply(x[,-c(1:4)], 2, FUN = lines, col = \"gray\")\n    lines(as.numeric(x[,\"UPPER\"]), col = \"red\")\n    lines(as.numeric(x[,\"LOWER\"]), col = \"red\")\n    lines(as.numeric(x[,\"MEAN\"]), col = \"black\", lwd = 2)\n  })\n```\n\n\n\n## Padrão dos grupos de cluster Kmeans\n```{r Fig1 kmeansGrupos, echo=FALSE, cache=TRUE, cache.rebuild=TRUE, fig.height=8, fig.width=8, fig.align=\"center\", message=FALSE, warning=FALSE}\nplot(meanPontosLastYear, t = \"l\", col = \"black\", lwd = 2, ylim = c(0,1))\nlines(meanEndviGroups[[1]][,\"MEAN\"], col = \"darkgreen\", lty = 1, lwd = 1, ylim = c(0,1))\nlines(meanEndviGroups[[2]][,\"MEAN\"], col = \"blue\", lty = 1, lwd = 1, ylim = c(0,1))\nlines(meanEndviGroups[[3]][,\"MEAN\"], col = \"red\", lty = 1, lwd = 1, ylim = c(0,1))\nlines(meanEndviGroups[[4]][,\"MEAN\"], col = \"darkorange\", lty = 1, lwd = 1, ylim = c(0,1))\nlines(meanEndviGroups[[5]][,\"MEAN\"], col = \"purple\", lty = 1, lwd = 1, ylim = c(0,1))\nlines(meanEndviGroups[[6]][,\"MEAN\"], col = \"brown\", lty = 1, lwd = 1, ylim = c(0,1))\nlegend(\"bottomright\",\n       fill = c(\"black\", 'darkgreen', 'blue', 'red', 'darkorange', \"purple\", \"brown\"),\n       legend = c(\"MeanAll\", \"meanGroup1\", \"meanGroup2\", \"meanGroup3\", \"meanGroup4\", \"meanGroup4\", \"meanGroup6\"))\n\n```\n\n\n\n\n```{r Fig sampleGroupsNDVI, echo=FALSE, cache=TRUE, fig.height=12, fig.width=12, fig.align=\"center\", message=FALSE, warning=FALSE}\npar(mfrow = c(3,2))\nlapply(meanEndviGroups, function(x){ \n  #Sample 3 pixels by group\n  NDVI <- x[,sample(5:ncol(x),3)]\n  plot(as.numeric(NDVI[,1]), t = \"l\", col = \"black\", lwd = 1, ylim = c(0,1), ylab = \"NDVI\", xlab = \"TIME\")\n    apply(NDVI, 2, FUN = lines, col = \"black\")\n  })\n```\n\n\n",
    "created" : 1506075411589.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2094411788",
    "id" : "411771D1",
    "lastKnownWriteTime" : 1506109929,
    "last_content_update" : 1506109929838,
    "path" : "/hds/dados_work/GitHub/DiscOficAmb/OneYear_ManuscriptClusterAnalise.Rmd",
    "project_path" : "OneYear_ManuscriptClusterAnalise.Rmd",
    "properties" : {
        "last_setup_crc32" : "C227F8807d023e20",
        "source_window_id" : ""
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}